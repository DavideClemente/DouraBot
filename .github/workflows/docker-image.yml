name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Build the Docker image
      uses: actions/checkout@v4

    - name: Fetch all tags
      run: git fetch --tags

    - name: Get latest tag
      id: get_tag
      run: |
        latest=$(git tag --sort=-v:refname | head -n 1)
        echo "Latest tag: $latest"
        echo "latest_tag=$latest" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump
      run: |
        latest=${{ steps.get_tag.outputs.latest_tag }}
        if [[ -z "$latest" ]]; then
          echo "new_tag=v1.0.0" >> $GITHUB_OUTPUT
        else
          version=${latest#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
        fi
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

    - name: Create new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ env.new_tag }}
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
        git push origin ${{ env.new_tag }}


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0

    - name: Login to DockerHub
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          davide2707clemente/dourabot:latest
          davide2707clemente/dourabot:${{env.new_tag}}
        platforms: linux/amd64,linux/arm64
        build-args: |
          TOKEN_PROD=${{ vars.TOKEN_PROD }}
          DOURADINHOS=${{ vars.DOURADINHOS }}
          CURRENCY_API_KEY=${{ vars.CURRENCY_API_KEY }}
          CLOUDFLARE_WORKER=${{ vars.CLOUDFLARE_WORKER }}
          SPOTIFY_CLIENT_ID=${{ vars.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET=${{ vars.SPOTIFY_CLIENT_SECRET }}
